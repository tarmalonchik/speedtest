syntax = "proto3";
package sdk;
option go_package = "github.com/tarmalonchik/speedtest/pkg/api/sdk";
import "tagger/tagger.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  base_path: "/bank/"
  info: {
    title: "Bank API";
    description: "";
  }
  security_definitions: {
    security: [
      {
        key: "bearerToken"
        value: {
          type: TYPE_API_KEY
          in: IN_HEADER
          name: "Authorization"
          description: "Authentication token, prefixed by Bearer: Bearer <token>"
        }
      },
      {
        key: "basic"
        value: {
          type: TYPE_BASIC
          description: "Basic authentication login and password"
        }
      }
    ]
  }
  security: {}
};

service BankService {
  rpc Ping(PingRequest) returns (PingResponse) {
    option (google.api.http) = {
      post: "/v1/ping"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {}
      }
    };
  }

  rpc AvailableNodes(AvailableNodesRequest) returns (AvailableNodesResponse) {
    option (google.api.http) = {
      get: "/v1/nodes"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      security: {
        security_requirement: {}
      }
    };
  }
}

message PingRequest {
  string ip_address = 1  [(tagger.tags) = "validate:\"required\""];
}

message PingResponse {}

message AvailableNodesRequest {}

message AvailableNodesResponse {
  repeated string ip = 1;
}
